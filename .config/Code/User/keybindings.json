// Place your key bindings in this file to override the defaults
[
  /* --------------------------------- Editor --------------------------------- */

  // Insert line
  {
    "key": "enter",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal'"
  },
  {
    "key": "shift+enter",
    "command": "editor.action.insertLineBefore",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal'"
  },

  // Move lines up and down
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // {
  //   "key": "tab",
  //   "command": "tab",
  //   "when": "editorTextFocus && !editorTabMovesFocus"
  // },
  // {
  //   "key": "shift+tab",
  //   "command": "outdent",
  //   "when": "editorTextFocus && !editorTabMovesFocus"
  // },

  /* ---------------------------- Window Navigation --------------------------- */

  // Quick window navigation
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "!inQuickOpen && !inKeybindingsSearch && !inSettingsSearch && !searchInputBoxFocus && !findInputFocussed && !suggestWidgetVisible && !problemsFilterFocus && !parameterHintsVisible && !isInDiffEditor && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown",
    "when": "!inQuickOpen && !inKeybindingsSearch && !inSettingsSearch && !searchInputBoxFocus && !findInputFocussed && !suggestWidgetVisible && !problemsFilterFocus && !parameterHintsVisible && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp",
    "when": "!inQuickOpen && !inKeybindingsSearch && !inSettingsSearch && !searchInputBoxFocus && !findInputFocussed && !suggestWidgetVisible && !problemsFilterFocus && !parameterHintsVisible && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "!inQuickOpen && !inKeybindingsSearch && !inSettingsSearch && !searchInputBoxFocus && !findInputFocussed && !suggestWidgetVisible && !problemsFilterFocus && !parameterHintsVisible && !isInDiffEditor && vim.mode != 'Insert'"
  },

  // Quick Navigation for diff view
  {
    "key": "ctrl+h",
    "command": "workbench.action.compareEditor.focusSecondarySide",
    "when": "isInDiffEditor && !isInDiffLeftEditor"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "isInDiffEditor && isInDiffLeftEditor"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.compareEditor.focusPrimarySide",
    "when": "isInDiffEditor && isInDiffLeftEditor"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "isInDiffEditor && !isInDiffLeftEditor"
  },

  /* -------------------------------- Explorer -------------------------------- */

  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "u",
    "command": "undo",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "o",
    "command": "list.select",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "o",
    "command": "-list.toggleExpand",
    "when": "listFocus && !inputFocus"
  },

  /* --------------------------------- Cursor --------------------------------- */

  {
    "key": "ctrl+s",
    "command": "cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+y",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },

  /* --------------------------------- Buffer --------------------------------- */

  /* ---------------------------------- Popup --------------------------------- */

  /* ---------------------------------- Diff ---------------------------------- */

  {
    "key": "] g",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "[ g",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },

  /* -------------------------------------------------------------------------- */
  {
    "key": "cmd+[Equal]",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "cmd+k cmd+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "shift+alt+s",
    "command": "liveSass.command.watchMySass"
  },
  {
    "key": "alt+r",
    "command": "workbench.action.tasks.build"
  },
  {
    "key": "shift+cmd+b",
    "command": "-workbench.action.tasks.build"
  },
  {
    "key": "cmd+u",
    "command": "cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+backspace",
    "command": "deleteAllLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+backspace",
    "command": "-deleteAllLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+[Minus]",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+cmd+r",
    "command": "workbench.action.removeRootFolder"
  },
  {
    "key": "ctrl+cmd+o",
    "command": "workbench.action.addRootFolder"
  },
  {
    "key": "ctrl+[Semicolon]",
    "command": "editor.emmet.action.balanceIn"
  },
  {
    "key": "ctrl+[Quote]",
    "command": "editor.emmet.action.balanceOut"
  },
  {
    "key": "ctrl+shift+s",
    "command": "cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+cmd+left",
    "command": "-cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+i",
    "command": "cursorWordEndRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "-cursorWordEndRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+y",
    "command": "cursorWordStartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "-cursorWordStartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+enter",
    "command": "workbench.action.debug.start",
    "when": "debuggersAvailable && !inDebugMode"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "debuggersAvailable && !inDebugMode"
  },
  {
    "key": "cmd+enter",
    "command": "workbench.action.debug.continue",
    "when": "inDebugMode"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "inDebugMode"
  },
  {
    "key": "ctrl+shift+l",
    "command": "turboConsoleLog.displayLogMessage"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-turboConsoleLog.displayLogMessage"
  },
  {
    "key": "shift+alt+u",
    "command": "-turboConsoleLog.uncommentAllLogMessages"
  },
  {
    "key": "shift+alt+d",
    "command": "-turboConsoleLog.deleteAllLogMessages"
  },
  {
    "key": "shift+alt+c",
    "command": "-turboConsoleLog.commentAllLogMessages"
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.lastEditorInGroup"
  },
  {
    "key": "ctrl+0",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+[Minus]",
    "command": "-workbench.action.navigateBack"
  },
  {
    "key": "cmd+[",
    "command": "editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+cmd+g",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+f12",
    "command": "-editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+alt+d",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+2",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+cmd+2",
    "command": "editor.action.changeAll",
    "when": "editorTextFocus && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+f2",
    "command": "-editor.action.changeAll",
    "when": "editorTextFocus && editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+w",
    "command": "-extension.htmlTagWrap",
    "when": "editorTextFocus"
  },
  {
    "key": "f11",
    "command": "-extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && debugConfigurationType == 'node'"
  },
  {
    "key": "cmd+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+cmd+[Minus]",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "cmd+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "shift+cmd+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "shift+cmd+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "shift+alt+g",
    "command": "workbench.scm.focus"
  },
  {
    "key": "ctrl+\\",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+shift+v",
    "command": "cursorPageDownSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+pagedown",
    "command": "-cursorPageDownSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+c",
    "command": "cursorPageUpSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+pageup",
    "command": "-cursorPageUpSelect",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+;",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "cmd+k cmd+g",
    "command": "git-graph.view"
  },
  {
    "key": "alt+a",
    "command": "html-css-class-completion.cache"
  },
  {
    "key": "ctrl+cmd+-",
    "command": "peacock.darken"
  },
  {
    "key": "alt+cmd+-",
    "command": "-peacock.darken"
  },
  {
    "key": "ctrl+cmd+0",
    "command": "peacock.lighten"
  },
  {
    "key": "alt+cmd+=",
    "command": "-peacock.lighten"
  },
  {
    "key": "alt+[Minus]",
    "command": "imagePreview.zoomOut"
  },
  {
    "key": "ctrl+t",
    "command": "-editor.action.transposeLetters",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+t",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+alt+cmd+[IntlYen]",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+alt+[Minus]",
    "command": "imagePreview.zoomIn"
  },
  {
    "key": "alt+v",
    "command": "editor.action.inspectTMScopes"
  },
  {
    "key": "shift+alt+t",
    "command": "workbench.view.extension.todo-tree-container"
  },
  {
    "key": "shift+alt+b",
    "command": "bookmarksExplorer.focus"
  },
  {
    "key": "shift+alt+p",
    "command": "projectManager.listProjects"
  },
  {
    "key": "alt+cmd+p",
    "command": "-projectManager.listProjects"
  },
  {
    "key": "shift+alt+w",
    "command": "projectManager.addToWorkspace#sideBar"
  },
  {
    "key": "shift+alt+a",
    "command": "projectManager.addToFavorites"
  },
  {
    "key": "shift+alt+v",
    "command": "workbench.view.extension.project-manager"
  },
  {
    "key": "alt+q",
    "command": "editor.togglequotes"
  },
  {
    "key": "cmd+'",
    "command": "-editor.togglequotes"
  },
  {
    "key": "alt+p",
    "command": "extension.relativePath",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+h",
    "command": "-extension.relativePath",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+o",
    "command": "workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "shift+cmd+u",
    "command": "-workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "cmd+k",
    "command": "workbench.action.terminal.clear",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+k",
    "command": "-workbench.action.terminal.clear",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "shift+cmd+m",
    "command": "-workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "ctrl+,",
    "command": "breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible"
  },
  {
    "key": "shift+cmd+.",
    "command": "-breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible"
  },
  {
    "key": "shift+alt+r",
    "command": "revealFileInOS"
  },
  {
    "key": "alt+cmd+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+shift+d",
    "command": "workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "shift+cmd+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "ctrl+q h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+up",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+q l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+alt+m",
    "command": "editor.action.toggleMinimap"
  },
  {
    "key": "cmd+k cmd+c",
    "command": "-editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+n",
    "command": "npm-intellisense.import"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.reloadWindow"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "cmd+k cmd+\\",
    "command": "-workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "cmd+h",
    "command": "-luna.image.rotate90Clockwise",
    "when": "luna:focused && activeCustomEditorId == 'luna.editor' && focusedView == ''"
  },
  {
    "key": "alt+t",
    "command": "workbench.action.quickOpenTerm"
  },
  {
    "key": "cmd+h",
    "command": "-testing.toggleTestingPeekHistory",
    "when": "testing.isPeekVisible"
  },
  {
    "key": "alt+d",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+/",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+c",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+/",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+/",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+.",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+l",
    "command": "editor.emmet.action.wrapWithAbbreviation"
  },
  {
    "key": "ctrl+n",
    "command": "-extension.vim_ctrl+n",
    "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "key": "ctrl+k",
    "command": "-extension.vim_ctrl+k",
    "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
  },
  // {
  //   "key": "ctrl+l",
  //   "command": "editor.action.insertSnippet",
  //   "when": "editorTextFocus",
  //   "args": {
  //     "snippet": "console.log('${TM_SELECTED_TEXT}$1');"
  //   }
  // },
  {
    "key": "ctrl+m",
    "command": "acceptSelectedCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+m",
    "command": "acceptSelectedSuggestion",
    "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
  },
  {
    "key": "ctrl+m",
    "command": "workbench.action.acceptSelectedQuickOpenItem",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+l",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "cmd+up",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+q shift+\\",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },

  // Vim mappings
  {
    "key": "ctrl+w v",
    "command": "workbench.action.splitEditor",
    "when": "!inQuickOpen && !inKeybindingsSearch && !inSettingsSearch && !searchInputBoxFocus && !findInputFocussed && !suggestWidgetVisible && !problemsFilterFocus && !parameterHintsVisible && !isInDiffEditor && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+w h",
    "command": "workbench.action.splitEditorOrthogonal",
    "when": "!inQuickOpen && !inKeybindingsSearch && !inSettingsSearch && !searchInputBoxFocus && !findInputFocussed && !suggestWidgetVisible && !problemsFilterFocus && !parameterHintsVisible && !isInDiffEditor && vim.mode != 'Insert'"
  },
  {
    "key": "shift+h",
    "command": "workbench.action.previousEditor",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "shift+l",
    "command": "workbench.action.nextEditor",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+v",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && vim.mode == 'Insert'"
  },

  {
    "key": "ctrl+cmd+l",
    "command": "editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+i",
    "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  }
]
