# Inserts a blank line between shell prompts

add_newline = true

# format = """
# $directory\
# $git_branch\
# $git_status\
# $deno\
# $nodejs\
# $lua\
# $package\
# $rust\
# $docker_context\
# $kubernetes\
# $fill\
# $cmd_duration\
# $time
# $character
# """

format = """
$directory\
$git_branch\
$git_status\
$deno\
$nodejs\
$lua\
$package\
$rust\
$docker_context\
$kubernetes\
$cmd_duration
$character
"""

[username]
style_user = "green"
style_root = "red"
format = "[$user]($style) "
disabled = false
show_always = true

[hostname]
ssh_only = false
format = 'on [$hostname](yellow) '
trim_at = "."
disabled = false

[character] # ❯ >    󱞩
success_symbol = " [❯](bold green)"
error_symbol = " [](bold red)"

[directory] #     󰊠  󱙝
format = ' [󰊠 ](white) [$path]($style)[$read_only]($read_only_style) '
read_only = " 󰍁"
read_only_style = "green"
truncation_length = 10
truncate_to_repo = true
style = "blue bold"

[cmd_duration] #   󰄉  󰔛
format = '[|](black) [󰄉 ](yellow) [$duration]($style)'
min_time = 4
show_milliseconds = false
disabled = false
style = "yellow"

[git_branch]
format = '[|](black) [$symbol$branch]($style) '
symbol = " "
style = "cyan"

[git_status]
format = """
([|](black)$ahead_behind )\
(\
[|](black)\
$conflicted\
$staged\
$renamed\
$modified\
$untracked\
$deleted\
$stashed\
)\
"""
conflicted = " [ ](red)"
ahead = " [⇡·${count}](green)"
behind = " [⇣·${count}](red)"
diverged = " [⇡·${ahead_count}](green) [⇣·${behind_count}](red)"
untracked = " [?·${count}](purple) " # ?, 
stashed = " [󰏗 ·${count}](blue) " # $,  , 󰏗
modified = " [ ·${count}](yellow) " # !, , 
staged = " [ ·${count}](green) " # +,✓, , , 
renamed = " [ ·${count}](purple) " # », 
deleted = " [ ·${count}](red) " # -, , 

[aws]
symbol = " "


[conda]
symbol = " "

[dart]
symbol = " "

[deno]
format = '[|](black) [🦕 $version]($style) '
detect_files = [
  'deno.json',
  'deno.jsonc',
  'mod.ts',
  'mod.js',
  'deps.ts',
  'deps.js',
]
style = 'green'

#[directory]
#read_only = " "

[docker_context]
symbol = "  "
format = "[|](black) [$symbol$context]($style) "
style = "blue"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

[elixir]
symbol = " "

[elm]
symbol = " "

[fill]
symbol = ' '

[golang]
symbol = " "

[hg_branch]
symbol = " "

[java]
symbol = " "

[julia]
symbol = " "

[lua]
format = "[|](black) [$symbol $version]($style)"
symbol = ' '                                    #  
detect_folders = ['lua']
style = 'blue'

[memory_usage]
symbol = "󰍛 "

[nim]
symbol = " "

[nix_shell]
symbol = " "

[nodejs]
format = "[|](black) [  $version](green) "      #  
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]

[package]
format = "[|](black) [$symbol $version]($style) "
symbol = " "
style = "208"

[perl]
symbol = " "

[php]
symbol = " "

[python]
symbol = " "
#pyenv_version_name = true
format = '[|](black) [${symbol}python (${version} )(\($virtualenv\) )]($style) '
style = "yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[ruby]
symbol = " " #  

[rust]
symbol = " "

[scala]
symbol = " "

[shlvl]
disabled = false
format = '[|](black) [$symbol$shlvl]($style) '
repeat = true
symbol = '❯'
repeat_offset = 1
threshold = 0

[swift]
symbol = " " #   󰛥

[time]
disabled = false
format = '[ $time]($style)' #       
use_12hr = false
time_format = '%T'           # %T = 12-hour format, %r = 24-hour format
utc_time_offset = 'local'
# style = 'magenta'
# time_range = '10:00:00-18:00:00'
