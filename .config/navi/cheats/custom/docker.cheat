# ----------------------------------------------------------------------------- #
% docker, container

# Remove the container and its associated anonymous volume. (leaves a dangling volume)
docker rm <container-name>


# ----------------------------------------------------------------------------- #
% docker, image

# Display an image manifest, or manifest list
docker manifest inspect <image-name>

# Print an image OS/architecture
docker manifest inspect <image-name> | jq -r '.manifests[].platform | if .variant == null then .os + "/" + .architecture else .os + "/" + .architecture + "/" + .variant end' | sort


# ----------------------------------------------------------------------------- #
% docker, volume

# Remove the container and its associated anonymous volume. (not named volumes)
docker rm -v <container-name>

# List all the volumes
docker volume ls

# List all the dangling voluems
docker volume ls -qf dangling=true

# Remove volumes
docker volume rm <volume>

# Remove all the dangling volumes
docker volume rm $(docker volume ls -qf dangling=true)

# Remove all volumes
docker volume prune


# ----------------------------------------------------------------------------- #
% docker-compose, volume

# Run one-off commands for a service
docker compose run <service-name> <commands>

# Remove the containers and the volumes entirely with docker-compose
docker compose down --volumes
