% git

# Checking the total number of commits
git rev-list --count <branch-name>

# Checking files from a differnt branch (ex: git show main:README.md)
git show <branch-name>:<file-name>

# Git tutorial on the terminal
git help tutorial

# Apply changes in a .git directory
git read-tree -mu HEAD

# Checkout a remote branch as a local branch
git checkout -b <branch-name> <remote>/<branch-name>


% git, sparse-checkout

# Clone with sparse option
git clone --filter=blob:none --sparse <repository-name>

# Enable sparse-checkout and checkout only directories you need
git sparse-checkout set <directory-name>

# Update the sparse-checkout dir\file to include additional directories (in cone mode) or patterns (in non-cone mode).
git sparse-checkout add <directory-name>

# Describe the directories or patterns in the sparse-checkout file.
git sparse-checkout list

# Disable the core.sparseCheckout config setting, and restore the working directory to include all files.
git sparse-checkout disable

# Clone a specific directory with sparse-checkout
cd ~/ghq/github.com/ && mkdir -p <repo-name> && cd $_ && git init && git remote add <remote> git@github.com:<repo-name>.git  && git sparse-checkout init --cone && git sparse-checkout set <directory-names> && git fetch --depth=1 <remote> <branch> && git checkout <branch>

# Edit dir/file from space-checkout (make sure to run git read-tree -mu HEAD to apply the changes)
v .git/info/sparce-checkout

# Enable sparse-checkout
git config core.sparseCheckout true

# Disable sparse-checkout
git config core.sparseCheckout false


% git, ghq

# Update all local repositories
ghq list | ghq get --update --parallel


% git, gh

# Create a new private repository on Github, and git clone with ghq
gh repo create <repo-name> --private && ghq get <repo-name>

# Show a list of remote repositories
gh repo list

# Rename remote repository on the current working directory
gh repo rename <new-repository-name>

# Rename remote repository by specifying the name of the repository 
gh repo rename <new-repository-name> -R <owner>/<repository-name>

# Delete remote repository
gh repo delete <repository-name>


